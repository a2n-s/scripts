#! /usr/bin/bash
#           ___                       personal page: https://a2n-s.github.io/
#      __ _|_  )_ _    ___   ___      github   page: https://github.com/a2n-s
#     / _` |/ /| ' \  |___| (_-<      my   dotfiles: https://github.com/a2n-s/dotfiles
#     \__,_/___|_||_|       /__/
#           ___                            _ _
#      __ _|_  )_ _ ___ ______ __ _ _ _ __| | |__
#     / _` |/ /| ' \___(_-<___/ _` | '_/ _` | '_ \
#     \__,_/___|_||_|  /__/   \__, |_| \__,_|_.__/
#                             |___/
#
# Description:  rename the default branch automaticcaly.
#               By default, rename master into main on the remote origin.
#               The above can be changed with `OLD=<old-branch> NEW=<new-branch> REM=<remote> a2n-s-grdb`
# Dependencies: git
# License:      https://github.com/a2n-s/scripts/blob/main/LICENSE
# Contributors: Stevan Antoine

# parse the arguments
OPTIONS=$(getopt -o h --long help -n 'a2n-s-grdb' -- "$@")
if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi
eval set -- "$OPTIONS"

# allow the user to change the environment variables.
[[ ! -v OLD ]] && OLD="master"
[[ ! -v NEW ]] && NEW="main"
[[ ! -v REM ]] && REM="origin"


usage () {
  #
  # the usage function.
  #
  echo "Usage: a2n-s-grdb [-h]"
  echo "Type -h or --help for the full help."
  exit 0
}


help () {
  #
  # the help function.
  #
  echo "a2n-s-grdb:"
  echo "     changes the name of the default branch of a \`git\` repository, locally."
  echo ""
  echo "Usage:"
  echo "     a2n-s-grdb [-h]"
  echo ""
  echo "Switches:"
  echo "     -h/--help             shows this help."
  echo ""
  echo "Environment variables:"
  echo "     OLD                   the name of the old branch (defaults to \"master\")"
  echo "     NEW                   the name of the new branch (defaults to \"main\")"
  echo "     REM                   the name of the remote (defaults to \"origin\")"
  exit 0
}


main () {
  #
  # TODO.
  #
  while [[ $# -gt 0 ]]; do
    case "$1" in
      -h | --help )   help ;;
      -- ) shift; break ;;
      * ) break ;;
    esac
  done

  echo "$REM: $OLD -> $NEW"

  git branch -m "$OLD" "$NEW"
  git fetch "$REM" -p
  git branch -u "$REM"/"$NEW" "$NEW"
  git remote set-head "$REM" -a
}


main "$@"
